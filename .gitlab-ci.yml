image: docker:latest

services:
    - docker:dind
    - postgres:latest

variables:
    POSTGRES_DB: subbotnik
    POSTGRES_USER: ${POSTGRES_USER}
    POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    
stages:
  - build
  - package
  - deploy
  - connect

gradle-build:
  image: java:8-jdk
  stage: build
  only:
    - master
  script: "./gradlew build"
  artifacts:
    paths:
      - build/libs/*.jar

docker-build:
  stage: package
  only:
    - master
  script:
  - docker build -t $CI_REGISTRY_IMAGE .
  - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
  - docker push $CI_REGISTRY_IMAGE
  
cache:
  paths:
    - node_modules/

deploy_stage:
  stage: deploy
  environment: Stage
  only:
    - master
  script:
    - rm ./package-lock.json
    - npm install
    - ./node_modules/@angular/cli/bin/ng test --progress false --single-run=true --watch=false
    - ./node_modules/@angular/cli/bin/ng e2e --progress false --watch=false
    - ./node_modules/@angular/cli/bin/ng build --progress false --prod --base-href XXX-stage.surge.sh
    - ./node_modules/.bin/surge -p dist/ --domain XXX-stage.surge.sh

connect:
  stage: connect
  image: postgres
  script:
  - export PGPASSWORD=$POSTGRES_PASSWORD
  - psql -h "postgres" -U "$POSTGRES_USER" -d "$POSTGRES_DB" -c "SELECT 'OK' AS status;"
